{"version":3,"sources":["store/actions/requestAction.js","store/utils/constants.js","components/misc/setClassNames.js","components/misc/Cell.js","components/company/CompanyItem.js","components/company/CompanyList.js","components/misc/Arrow.js","components/misc/HeaderCell.js","components/misc/HeaderTable.js","components/misc/WrapperCorner.js","components/misc/PageList.js","components/misc/Loader.js","containers/company/CompanyContainer.js","components/misc/Input.js","components/filter/Filter.js","components/misc/Hamburger.js","containers/filter/FilterContainer.js","store/actions/filterAction.js","containers/app/App.js","serviceWorker.js","store/reducers/filterReducer.js","store/reducers/requestReducer.js","index.js"],"names":["requestIncomes","companyId","dispatch","fetch","then","res","json","data","total","average","lastMonth","currentDate","Date","incomes","forEach","income","date","getMonth","value","Math","round","length","type","payload","id","totalIncome","averageIncome","lastMonthIncome","catch","error","mainClass","classList","filter","item","undefined","join","Cell","children","classNames","className","setClassNames","CompanyItem","name","city","CompanyList","mapCompanies","companies","map","company","key","Arrow","direction","handleClick","onClick","data-direction","HeaderCell","sort","isSmall","width","HeaderTable","isPending","React","useState","screenWidth","setScreenWidth","useEffect","window","innerWidth","WrapperCorner","PageList","currentPage","countPage","setPage","Loader","CompanyContainer","state","resultsNumber","sortType","column","intervalCondition","arr","obj","el","from","to","filteredCompanies","props","quickSort","toString","toLowerCase","includes","setState","setCountPage","rest","setDisplayCompanies","start","end","slice","prevState","swap","i","j","temp","partition","pivot","left","right","pivotValue","partitionIndex","evt","currentTarget","previousElementSibling","split","string","index","toUpperCase","nextEl","document","querySelector","replace","nextElementSibling","dataset","prevProps","snapshot","this","companiesState","cmps","find","sortCompanies","SwitchTransition","mode","CSSTransition","addEndListener","node","done","addEventListener","timeout","Component","connect","requestReducer","filterReducer","requestIncome","Input","label","disabled","actionType","focused","setFocused","changeFocus","target","htmlFor","min","onChange","onFocus","onBlur","onBeforeInput","test","preventDefault","Filter","Hamburger","FilterContainer","close","App","requestCompanies","requestIncomesPendingEnable","requestIncomesPendingDisable","Boolean","location","hostname","match","initState","store","createStore","combineReducers","action","push","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.3eed83e6.chunk.js","sourcesContent":["import {\n  REQUEST_INCOMES_PENDING,\n  REQUEST_INCOMES_SUCCESS,\n  REQUEST_INCOMES_FAILED,\n  REQUEST_COMPANIES_PENDING,\n  REQUEST_COMPANIES_SUCCESS,\n  REQUEST_COMPANIES_FAILED\n} from \"../utils/constants\";\n\nexport const requestIncomesPendingEnable = () => ({\n  type: REQUEST_INCOMES_PENDING, payload: true\n});\n\nexport const requestIncomesPendingDisable = () => ({\n  type: REQUEST_INCOMES_PENDING, payload: false\n});\n\nexport const requestIncomes = companyId => dispatch => {\n  fetch( `https://recruitment.hal.skygate.io/incomes/${ companyId }` )\n    .then( res => res.json())\n    .then( data => {\n      const currentDate = new Date();\n      let total, average, lastMonth, incomeDate;\n      total = 0;\n      lastMonth = 0;\n\n      data.incomes.forEach( income => {\n        incomeDate = new Date( income.date );\n        if ( incomeDate.getMonth() === currentDate.getMonth() - 1) {\n          lastMonth += +income.value;\n        }\n        total += +income.value;\n      });\n\n      total = Math.round( total * 100 ) / 100;\n      lastMonth = Math.round( lastMonth * 100 ) / 100;\n      average = Math.round( total / data.incomes.length * 100 ) / 100;\n\n      dispatch({\n        type: REQUEST_INCOMES_SUCCESS,\n        payload: {\n          id: data.id,\n          totalIncome: total,\n          averageIncome: average,\n          lastMonthIncome: lastMonth\n        }})\n    })\n    .catch( error => dispatch({ type: REQUEST_INCOMES_FAILED, payload: error}))\n};\n\nexport const requestCompanies = () => dispatch => {\n  dispatch({ type: REQUEST_COMPANIES_PENDING });\n  fetch( \"https://recruitment.hal.skygate.io/companies\" )\n    .then( res => res.json())\n    .then( data => dispatch({ type: REQUEST_COMPANIES_SUCCESS, payload: data }))\n    .catch( error => dispatch({ type: REQUEST_COMPANIES_FAILED, payload: error }))\n};\n","export const REQUEST_COMPANIES_PENDING = \"REQUEST_COMPANIES_PENDING\";\nexport const REQUEST_COMPANIES_SUCCESS = \"REQUEST_COMPANIES_SUCCESS\";\nexport const REQUEST_COMPANIES_FAILED = \"REQUEST_COMPANIES_FAILED\";\nexport const REQUEST_INCOMES_PENDING = \"REQUEST_INCOMES_PENDING\";\nexport const REQUEST_INCOMES_SUCCESS = \"REQUEST_INCOMES_SUCCESS\";\nexport const REQUEST_INCOMES_FAILED = \"REQUEST_INCOMES_FAILED\";\nexport const SET_FILTER_ID = \"SET_FILTER_ID\";\nexport const SET_FILTER_NAME = \"SET_FILTER_NAME\";\nexport const SET_FILTER_CITY = \"SET_FILTER_CITY\";\nexport const SET_FILTER_AVERAGE_INCOME_TO = \"SET_FILTER_AVERAGE_INCOME_TO\";\nexport const SET_FILTER_TOTAL_INCOME_TO = \"SET_FILTER_TOTAL_INCOME_TO\";\nexport const SET_FILTER_LAST_MONTH_INCOME_TO = \"SET_FILTER_LAST_MONTH_INCOME_TO\";\nexport const SET_FILTER_AVERAGE_INCOME_FROM = \"SET_FILTER_AVERAGE_INCOME_FROM\";\nexport const SET_FILTER_TOTAL_INCOME_FROM = \"SET_FILTER_TOTAL_INCOME_FROM\";\nexport const SET_FILTER_LAST_MONTH_INCOME_FROM = \"SET_FILTER_LAST_MONTH_INCOME_FROM\";\nexport const INCREASE = \"INCREASE\";\nexport const DECREASE = \"DECREASE\";\n","export default ( mainClass, classList ) => {\n    let list;\n    if ( typeof classList === \"string\" && classList !== \"\") {\n      list = [ mainClass, classList ]\n        .filter( item => item !== undefined && item !== null && item !== \"\" )\n        .join( \" \" );\n    } else if ( classList && classList.length ){\n      list = [ mainClass, ...classList ]\n        .filter( item => item !== undefined && item !== null && item !== \"\" )\n        .join( \" \" );\n    } else {\n      list = mainClass;\n    }\n\n  return list;\n};\n","import React from 'react';\nimport setClassNames from \"./setClassNames\";\n\nimport \"./scss/cell.scss\";\n\nconst Cell = ({ children, value, classNames }) => {\n  const className = setClassNames( \"cell\", classNames );\n\n  return (\n    <p className={ className }>\n      { value }\n      { children }\n    </p>\n  );\n};\n\nexport default Cell;\n","import React from 'react';\nimport Cell from \"../misc/Cell\";\n\nimport \"../misc/scss/grid.scss\";\n\nconst CompanyItem = ({\n  id,\n  name,\n  city,\n  totalIncome,\n  averageIncome,\n  lastMonthIncome\n}) => {\n  return (\n    <div className=\"company-item grid\">\n      <Cell value={ id } classNames=\"id\"/>\n      <Cell value={ name } classNames=\"name\"/>\n      <Cell value={ city } classNames=\"city\"/>\n      <Cell value={ totalIncome } classNames=\"total-income\"/>\n      <Cell value={ averageIncome } classNames=\"average-income\"/>\n      <Cell value={ lastMonthIncome } classNames=\"last-month-income\"/>\n    </div>\n  );\n};\n\nexport default CompanyItem;\n","import React from 'react';\nimport CompanyItem from \"./CompanyItem\";\n\nimport \"./scss/company-list.scss\";\n\nconst CompanyList = ({ companies }) => {\n  let mapCompanies = companies.map( company => <CompanyItem\n    name={ company.name }\n    averageIncome={ company.averageIncome ? company.averageIncome : \"No Data\" }\n    lastMonthIncome={ company.lastMonthIncome ? company.lastMonthIncome : \"No Data\" }\n    totalIncome={ company.totalIncome ? company.totalIncome : \"No Data\" }\n    city={ company.city }\n    id={ company.id }\n    key={ company.id }\n  />);\n\n  return (\n    <div id=\"company-list\">\n      { mapCompanies }\n    </div>\n  );\n};\n\nexport default CompanyList;\n","import React from 'react';\n\nimport \"./scss/arrow.scss\";\n\nconst Arrow = ({ direction, handleClick }) => {\n  return (\n    <p\n      className=\"block\"\n      onClick={ handleClick }\n      data-direction={ direction }\n    >\n      <span className={ `arrow arrow-${ direction }` } />\n    </p>\n  );\n};\n\nexport default Arrow;\n","import React from 'react';\nimport Cell from \"./Cell\";\nimport Arrow from \"./Arrow\";\n\nimport \"./scss/header-cell.scss\";\n\nconst HeaderCell = ({\n  value,\n  classNames,\n  sort\n}) => {\n  return (\n    <div className=\"header-cell\">\n      <Cell value={ value } classNames={ classNames }/>\n      <Arrow direction=\"down\" handleClick={ sort }/>\n    </div>\n  );\n};\n\nexport default HeaderCell;\n","import React from 'react';\nimport HeaderCell from \"./HeaderCell\";\nimport { REQUEST_COMPANIES_PENDING } from \"../../store/utils/constants\";\n\nimport \"./scss/grid.scss\";\n\nconst isSmall = width => width <= 1024;\n\nconst HeaderTable = ({ sort, isPending }) => {\n  const [ screenWidth, setScreenWidth ] = React.useState( 0 );\n\n  React.useEffect(() => {\n    setScreenWidth( window.innerWidth );\n  }, []);\n\n  return (\n    <div id=\"header-table\" className=\"grid\">\n      <HeaderCell\n        value=\"id\"\n        classNames={[ \"id\", isPending === REQUEST_COMPANIES_PENDING ? \"disabled\" : null ]}\n        sort={ isPending === REQUEST_COMPANIES_PENDING ? null : sort}\n      />\n      <HeaderCell\n        value=\"name\"\n        classNames={[ \"name\", isPending === REQUEST_COMPANIES_PENDING ? \"disabled\" : null ]}\n        sort={ isPending === REQUEST_COMPANIES_PENDING ? null : sort }\n      />\n      <HeaderCell\n        value=\"city\"\n        classNames={[ \"city\", isPending === REQUEST_COMPANIES_PENDING ? \"disabled\" : null ]}\n        sort={ isPending === REQUEST_COMPANIES_PENDING ? null : sort }\n      />\n      <HeaderCell\n        value={ \"total\" + ( isSmall( screenWidth ) ? \"\" : \" income\" )}\n        classNames={[ \"total-income\", isPending !== \"\" ? \"disabled\" : null ]}\n        sort={ isPending !== \"\" ? null : sort }\n      />\n      <HeaderCell\n        value={ \"average\" + ( isSmall( screenWidth ) ? \"\" : \" income\" )}\n        classNames={[ \"average-income\", isPending !== \"\" ? \"disabled\" : null ]}\n        sort={ isPending !== \"\" ? null : sort  }\n      />\n      <HeaderCell\n        value={ \"last month\" + ( isSmall( screenWidth ) ? \"\" : \" income\" )}\n        classNames={[ \"last-month-income\", isPending !== \"\" ? \"disabled\" : null ]}\n        sort={ isPending !== \"\" ? null : sort  }\n      />\n    </div>\n  );\n};\n\nexport default HeaderTable;\n","import React from 'react';\nimport setClassNames from \"./setClassNames\";\n\nimport \"./scss/wrapper-corner.scss\";\n\nconst WrapperCorner = ({ children, classNames, id }) => {\n  const className = setClassNames( \"corners\", classNames );\n\n  return (\n    <div className={ className } id={ id }>\n      { children }\n    </div>\n  );\n};\n\nexport default WrapperCorner;\n","import React from 'react';\nimport Arrow from \"./Arrow\";\nimport { DECREASE, INCREASE } from \"../../store/utils/constants\";\n\nimport \"./scss/page-list.scss\";\n\nconst PageList = ({ currentPage, countPage, setPage }) => {\n  return (\n    <div id=\"page-list\">\n      <Arrow direction=\"left\" handleClick={() => setPage( DECREASE )}/>\n      <span>{ currentPage } of { countPage }</span>\n      <Arrow direction=\"right\" handleClick={() => setPage( INCREASE )}/>\n    </div>\n  );\n};\n\nexport default PageList;\n","import React from 'react';\nimport setClassNames from \"./setClassNames\";\n\nimport \"./scss/loader.scss\"\n\nconst Loader = ({ classNames }) => {\n  const className = setClassNames( \"spinner\", classNames );\n\n  return (\n    <div className={ className }/>\n  );\n};\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { requestIncomes } from \"../../store/actions\";\nimport {\n  DECREASE,\n  INCREASE,\n  REQUEST_COMPANIES_PENDING,\n  REQUEST_INCOMES_PENDING\n} from \"../../store/utils/constants\";\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\nimport CompanyList from \"../../components/company/CompanyList\";\nimport HeaderTable from \"../../components/misc/HeaderTable\";\nimport WrapperCorner from \"../../components/misc/WrapperCorner\";\nimport PageList from \"../../components/misc/PageList\";\nimport Loader from \"../../components/misc/Loader\";\n\nimport \"./scss/company-container.scss\";\n\nconst mapStateToProps = state => ({\n  companies: state.requestReducer.companies,\n  incomes: state.requestReducer.incomes,\n  isPending: state.requestReducer.isPending,\n  error: state.requestReducer.error,\n  id: state.filterReducer.id,\n  name: state.filterReducer.name,\n  city: state.filterReducer.city,\n  totalIncome: state.filterReducer.totalIncome,\n  averageIncome: state.filterReducer.averageIncome,\n  lastMonthIncome: state.filterReducer.lastMonthIncome\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestIncome: companyId => dispatch( requestIncomes( companyId ))\n});\n\nclass CompanyContainer extends Component {\n  state = {\n    currentPage: 1,\n    countPage: 1,\n    resultsNumber: 10,\n    companies: [],\n    sortType: \"\",\n    column: \"\"\n  };\n\n  componentDidUpdate ( prevProps, prevState, snapshot ) {\n    const {\n      isPending,\n      id,\n      name,\n      city,\n      totalIncome,\n      averageIncome,\n      lastMonthIncome,\n      companies\n    } = this.props;\n    const {\n      companies: companiesState,\n      sortType,\n      column\n    } = this.state;\n    const {\n      setCountPage,\n      filteredCompanies,\n      quickSort\n    } = this;\n\n    if ( prevProps.isPending === REQUEST_COMPANIES_PENDING ) {\n      this.setState({ companies: [ ...companies ] });\n      setCountPage( companies );\n    }\n\n    if ( prevProps.isPending === REQUEST_INCOMES_PENDING && isPending === \"\") {\n      const { incomes, companies } = this.props;\n      let cmps = [ ...companies ];\n      cmps.forEach( company => {\n        let find = incomes.find( income => income.id === company.id );\n        company.averageIncome = find.averageIncome;\n        company.totalIncome = find.totalIncome;\n        company.lastMonthIncome = find.lastMonthIncome;\n      });\n      this.setState({ companies: cmps })\n    }\n\n    if (\n      prevProps.id !== id || prevProps.name !== name\n      || prevProps.city !== city || prevProps.totalIncome !== totalIncome\n      || prevProps.averageIncome !== averageIncome || prevProps.lastMonthIncome !== lastMonthIncome\n    ) {\n      setCountPage( filteredCompanies());\n    }\n\n    if ( !( prevState.sortType === sortType && prevState.column === column )) {\n      let sortCompanies =\n        quickSort( companiesState, 0, companiesState.length - 1, column, sortType );\n      this.setState({ companies: sortCompanies });\n    }\n  }\n\n  intervalCondition = ( arr, obj, el ) => {\n    switch ( true ) {\n      case +obj.from === 0 && +obj.to !== 0:\n        return arr = arr.filter( item => +item[ el ] < +obj.to );\n      case +obj.to === 0 && +obj.from !== 0:\n        return arr = arr.filter( item => +item[ el ] > +obj.from);\n      case +obj.from > 0 && +obj.to > 0 && +obj.to < +obj.from :\n        return arr;\n      case +obj.from > 0 && +obj.to > 0:\n        return arr = arr.filter(\n          item => +item[ el ] > +obj.from && +item[ el ] < +obj.to\n        );\n      default:\n        return arr\n    }\n  };\n\n  filteredCompanies = () => {\n    const {\n      companies,\n      id,\n      name,\n      city,\n      averageIncome,\n      totalIncome,\n      lastMonthIncome\n    } = this.props;\n    const { sortType, column } = this.state;\n    const { intervalCondition, quickSort } = this;\n\n    let filteredCompanies = companies.filter( company =>\n      company.id.toString().toLowerCase().includes( id.toString().toLowerCase())\n      && company.name.toLowerCase().includes( name.toLowerCase())\n      && company.city.toLowerCase().includes( city.toLowerCase())\n    );\n\n    filteredCompanies = intervalCondition( filteredCompanies, totalIncome, \"totalIncome\" );\n    filteredCompanies = intervalCondition( filteredCompanies, averageIncome, \"averageIncome\" );\n    filteredCompanies = intervalCondition( filteredCompanies, lastMonthIncome, \"lastMonthIncome\" );\n\n    if ( sortType !== \"\" ) {\n      filteredCompanies = quickSort( filteredCompanies, 0, filteredCompanies.length - 1, column, sortType );\n    }\n\n    this.setState({ companies: filteredCompanies });\n    return filteredCompanies;\n  };\n\n  setCountPage = companies => {\n    const { resultsNumber } = this.state;\n\n    let countPage = companies.length / resultsNumber;\n    let rest = countPage % 1;\n    if ( rest !== 0 ) countPage = countPage - rest + 1;\n\n    this.setState({\n      countPage: countPage === 0 ? 1 : countPage,\n      currentPage: 1\n    });\n  };\n\n  setDisplayCompanies = () => {\n    const {\n      resultsNumber,\n      currentPage,\n      companies\n    } = this.state;\n    let start, end;\n\n    start = resultsNumber * currentPage - resultsNumber;\n    end = resultsNumber * currentPage;\n\n    return companies.slice( start, end );\n  };\n\n  setPage = type => {\n    const { countPage, currentPage } = this.state;\n\n    if ( type === INCREASE && currentPage < countPage ) {\n      this.setState( prevState => ({\n        currentPage: prevState.currentPage + 1\n      }));\n    } else if ( type === DECREASE && currentPage > 1) {\n      this.setState( prevState => ({\n        currentPage: prevState.currentPage - 1\n      }));\n    }\n  };\n\n  swap = ( arr, i, j ) => {\n    const temp = arr[ i ];\n    arr[ i ] = arr[ j ];\n    arr[ j ] = temp;\n  };\n\n  partition = ( arr, pivot, left, right, column, sortType ) => {\n    const pivotValue = arr[ pivot ];\n    let partitionIndex = left;\n\n    for( let i = left; i < right; i++ ) {\n      if ( sortType === \"asc\" && arr[ i ][ column ] < pivotValue[ column ] ) {\n        this.swap( arr, i, partitionIndex );\n        partitionIndex++;\n      } else if ( sortType === \"desc\" && arr[ i ][ column ] > pivotValue[ column ] ) {\n        this.swap( arr, i, partitionIndex );\n        partitionIndex++;\n      }\n    }\n\n    this.swap( arr, right, partitionIndex );\n    return partitionIndex;\n  };\n\n  quickSort = ( arr, left, right, column, sortType ) => {\n    let pivot, partitionIndex;\n\n    if ( left < right ) {\n      pivot = right;\n      partitionIndex = this.partition( arr, pivot, left, right, column, sortType );\n\n      this.quickSort( arr, left, partitionIndex - 1, column, sortType );\n      this.quickSort( arr, partitionIndex + 1, right, column, sortType );\n    }\n\n    return arr;\n  };\n\n  sort = evt => {\n    const { currentTarget } = evt;\n    const { className, classList } = currentTarget.previousElementSibling;\n\n    let column = classList[ 1 ].split( '-' );\n    column.forEach(( string, index ) => ( index > 0 )\n      ? column[ index ] = string[ 0 ].toUpperCase() + string.slice( 1 )\n      : column[ index ]);\n    column = column.join( '' );\n\n    this.setState({ column: column });\n\n    let nextEl = document\n      .querySelector( `.${ className.replace( ' ', '.' )}` )\n      .nextElementSibling;\n\n    if ( currentTarget.dataset[\"direction\"] === \"down\" ) {\n      nextEl.dataset[ \"direction\" ] = \"up\";\n      nextEl.children[ 0 ].classList.replace( \"arrow-down\", \"arrow-up\" );\n      this.setState({ sortType: \"asc\" });\n    } else if ( currentTarget.dataset[\"direction\"] === \"up\" ) {\n      nextEl.dataset[ \"direction\" ] = \"down\";\n      nextEl.children[ 0 ].classList.replace( \"arrow-up\", \"arrow-down\" );\n      this.setState({ sortType: \"desc\" });\n    }\n  };\n\n  render () {\n    const { isPending } = this.props;\n    const { currentPage, countPage } = this.state;\n    const {\n      setDisplayCompanies,\n      setPage,\n      sort\n    } = this;\n\n    return (\n      <div id=\"company\">\n        <PageList\n          countPage={ countPage }\n          currentPage={ currentPage }\n          setPage={ setPage }\n        />\n        <WrapperCorner >\n          <HeaderTable sort={ sort } isPending={ isPending }/>\n          <SwitchTransition mode=\"out-in\">\n            <CSSTransition\n              key={ currentPage }\n              addEndListener={( node, done ) => {\n                node.addEventListener( \"transitionend\", done, false );\n              }}\n              classNames=\"blink\"\n              timeout={ 500 }\n            >\n              <>\n                <CompanyList companies={ setDisplayCompanies()}/>\n                { isPending !== \"\" && <Loader classNames={\n                  isPending === REQUEST_INCOMES_PENDING ? \"upon-incomes\": null\n                }/> }\n              </>\n            </CSSTransition>\n          </SwitchTransition>\n        </WrapperCorner>\n      </div>\n    );\n  }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )( CompanyContainer );\n","import React from 'react';\nimport WrapperCorner from \"./WrapperCorner\";\n\nimport \"./scss/input.scss\";\n\nconst Input = ({\n  id,\n  name,\n  type,\n  label,\n  disabled,\n  filter,\n  actionType\n}) => {\n  const [ focused, setFocused ] = React.useState( false );\n\n  const changeFocus = evt => {\n    const { type, target } = evt;\n    if ( target.value.length !== 0 ) setFocused( true );\n    else if ( type === \"focus\" ) setFocused( true );\n    else if ( type === \"blur\" ) setFocused( false );\n  };\n\n  const handleChange = evt => {\n    const { target } = evt;\n\n    changeFocus( evt );\n    filter( actionType, target.value );\n  };\n\n  const disableNonNumeric = evt => {\n    let { data, target } = evt;\n    if ( target.type !== \"number\") return false;\n    let regex = /[0-9]|\\./;\n    if ( !regex.test( data )) evt.preventDefault();\n  };\n\n  return (\n    <WrapperCorner classNames={[ \"input\", disabled ? \"disabled\" : null ]}>\n      <label htmlFor={ name } className={ focused ? \"focused\" : null }>\n        { label }:\n      </label>\n      <input\n        id={ id }\n        type={ type }\n        name={ name }\n        min={ 0 }\n        disabled={ disabled }\n        onChange={ handleChange }\n        onFocus={ changeFocus }\n        onBlur={ changeFocus }\n        onBeforeInput={ disableNonNumeric }\n      />\n    </WrapperCorner>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport Input from \"../misc/Input\";\nimport {\n  REQUEST_COMPANIES_PENDING,\n  SET_FILTER_AVERAGE_INCOME_FROM,\n  SET_FILTER_AVERAGE_INCOME_TO,\n  SET_FILTER_CITY,\n  SET_FILTER_ID,\n  SET_FILTER_LAST_MONTH_INCOME_FROM,\n  SET_FILTER_LAST_MONTH_INCOME_TO,\n  SET_FILTER_NAME,\n  SET_FILTER_TOTAL_INCOME_FROM,\n  SET_FILTER_TOTAL_INCOME_TO\n} from \"../../store/utils/constants\";\n\nimport \"./scss/filter.scss\";\n\nconst Filter = ({ filter, isPending, className }) => {\n  return (\n    <div id=\"filter\" className={ className }>\n      <h2>Filter by:</h2>\n      <Input\n        id=\"company-id\"\n        name=\"company-id\"\n        type=\"number\"\n        label=\"ID\"\n        disabled={ isPending === REQUEST_COMPANIES_PENDING }\n        filter={ filter }\n        actionType={ SET_FILTER_ID }\n      />\n      <Input\n        id=\"company-name\"\n        name=\"company-name\"\n        type=\"text\"\n        label=\"NAME\"\n        disabled={ isPending === REQUEST_COMPANIES_PENDING }\n        filter={ filter }\n        actionType={ SET_FILTER_NAME }\n      />\n      <Input\n        id=\"company-city\"\n        name=\"company-city\"\n        type=\"text\"\n        label=\"CITY\"\n        disabled={ isPending === REQUEST_COMPANIES_PENDING }\n        filter={ filter }\n        actionType={ SET_FILTER_CITY }\n      />\n      <p className=\"label\">TOTAL INCOME</p>\n      <Input\n        id=\"company-total-income-from\"\n        name=\"company-total-income-from\"\n        type=\"number\"\n        label=\"FROM\"\n        disabled={ isPending !== \"\"}\n        filter={ filter }\n        actionType={ SET_FILTER_TOTAL_INCOME_FROM }\n      />\n      <Input\n        id=\"company-total-income-to\"\n        name=\"company-total-income-to\"\n        type=\"number\"\n        label=\"TO\"\n        disabled={ isPending !== \"\" }\n        filter={ filter }\n        actionType={ SET_FILTER_TOTAL_INCOME_TO }\n      />\n      <p className=\"label\">AVERAGE INCOME</p>\n      <Input\n        id=\"company-average-income-from\"\n        name=\"company-average-income-from\"\n        type=\"number\"\n        label=\"FROM\"\n        disabled={ isPending !== \"\" }\n        filter={ filter }\n        actionType={ SET_FILTER_AVERAGE_INCOME_FROM }\n      />\n      <Input\n        id=\"company-average-income-to\"\n        name=\"company-average-income-to\"\n        type=\"number\"\n        label=\"TO\"\n        disabled={ isPending !== \"\" }\n        filter={ filter }\n        actionType={ SET_FILTER_AVERAGE_INCOME_TO }\n      />\n      <p className=\"label\">LAST MONTH INCOME</p>\n      <Input\n        id=\"company-last-month-income-from\"\n        name=\"company-last-month-income-from\"\n        type=\"number\"\n        label=\"FROM\"\n        disabled={ isPending !== \"\" }\n        filter={ filter }\n        actionType={ SET_FILTER_LAST_MONTH_INCOME_FROM }\n      />\n      <Input\n        id=\"company-last-month-income-to\"\n        name=\"company-last-month-income-to\"\n        type=\"number\"\n        label=\"TO\"\n        disabled={ isPending !== \"\" }\n        filter={ filter }\n        actionType={ SET_FILTER_LAST_MONTH_INCOME_TO }\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport setClassNames from \"./setClassNames\";\n\nimport \"./scss/hamburger.scss\";\n\nconst Hamburger = ({ handleClick, classNames }) => {\n  const className = setClassNames( \"hamburger\", classNames );\n\n  return (\n    <div className={ className } onClick={ handleClick }>\n      <p className=\"bar-first\"/>\n      <p className=\"bar-second\"/>\n      <p className=\"bar-third\"/>\n    </div>\n  );\n};\n\nexport default Hamburger;\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { filter } from \"../../store/actions\";\nimport Filter from \"../../components/filter/Filter\";\nimport Hamburger from \"../../components/misc/Hamburger\";\n\nconst mapStateToProps = state => ({\n  isPending: state.requestReducer.isPending\n});\n\nconst mapDispatchToProps = dispatch => ({\n  filter: ( type, value ) => dispatch( filter( type, value ))\n});\n\nclass FilterContainer extends Component {\n  state = {\n    close: false\n  };\n\n  componentDidMount () {\n    if ( window.innerWidth <= 1024 ) this.setState({ close: true });\n  }\n\n  handleClick = () => {\n    this.setState(prevState => ({ close: !prevState.close }));\n  };\n\n  render () {\n    const { filter, isPending } = this.props;\n\n    return (\n      <>\n        <Hamburger\n          handleClick={ this.handleClick }\n          classNames={ this.state.close ? \"\" : \"cross\" }\n        />\n        <Filter\n          filter={ filter }\n          isPending={ isPending }\n          className={ this.state.close ? \"close\" : null }\n        />\n      </>\n    );\n  }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )( FilterContainer );\n","export const filter = ( type, value ) => ({\n  type: type,\n  payload: value\n});\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport {\n  requestCompanies,\n  requestIncomes,\n  requestIncomesPendingEnable,\n  requestIncomesPendingDisable\n} from \"../../store/actions\";\nimport CompanyContainer from \"../company/CompanyContainer\";\nimport FilterContainer from \"../filter/FilterContainer\";\n\nimport './scss/App.scss';\n\nconst mapStateToProps = state => ({\n  companies: state.requestReducer.companies,\n  incomes: state.requestReducer.incomes\n});\n\nconst mapDispatchToProps = dispatch => ({\n  requestCompanies: () => dispatch( requestCompanies()),\n  requestIncome: companyId => dispatch( requestIncomes( companyId )),\n  requestIncomesPendingEnable: () => dispatch( requestIncomesPendingEnable()),\n  requestIncomesPendingDisable: () => dispatch( requestIncomesPendingDisable()),\n});\n\nclass App extends React.Component {\n  componentDidMount () {\n    this.props.requestCompanies();\n  }\n\n  componentDidUpdate ( prevProps, prevState, snapshot ) {\n    const {\n      companies,\n      requestIncome,\n      incomes,\n      requestIncomesPendingEnable,\n      requestIncomesPendingDisable\n    } = this.props;\n    if ( prevProps.companies !== companies ) {\n      requestIncomesPendingEnable();\n      companies.forEach( company => requestIncome( company.id ));\n    }\n    if ( incomes.length > 0 && companies.length === incomes.length ) {\n      requestIncomesPendingDisable();\n    }\n  }\n\n  render () {\n    return (\n      <div id=\"app\">\n        <FilterContainer />\n        <CompanyContainer />\n      </div>\n    );\n  }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )( App );\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  SET_FILTER_AVERAGE_INCOME_TO,\n  SET_FILTER_AVERAGE_INCOME_FROM,\n  SET_FILTER_CITY,\n  SET_FILTER_ID,\n  SET_FILTER_LAST_MONTH_INCOME_TO,\n  SET_FILTER_LAST_MONTH_INCOME_FROM,\n  SET_FILTER_NAME,\n  SET_FILTER_TOTAL_INCOME_TO,\n  SET_FILTER_TOTAL_INCOME_FROM\n} from \"../utils/constants\";\n\nconst initState = {\n  id: \"\",\n  name: \"\",\n  city: \"\",\n  averageIncome: { from: 0, to: 0 },\n  totalIncome: { from: 0, to: 0 },\n  lastMonthIncome: { from: 0, to: 0 }\n};\n\nexport const filterReducer = ( state = initState, action ) => {\n  switch ( action.type ) {\n    case SET_FILTER_ID:\n      return {\n        ...state,\n        id: action.payload\n      };\n    case SET_FILTER_CITY:\n      return {\n        ...state,\n        city: action.payload\n      };\n    case SET_FILTER_NAME:\n      return {\n        ...state,\n        name: action.payload\n      };\n    case SET_FILTER_AVERAGE_INCOME_FROM:\n      return {\n        ...state,\n        averageIncome: {\n          from: action.payload,\n          to: state.averageIncome.to\n        }\n      };\n    case SET_FILTER_LAST_MONTH_INCOME_FROM:\n      return {\n        ...state,\n        lastMonthIncome: {\n          from: action.payload,\n          to: state.lastMonthIncome.to\n        }\n      };\n    case SET_FILTER_TOTAL_INCOME_FROM:\n      return {\n        ...state,\n        totalIncome: {\n          from: action.payload,\n          to: state.totalIncome.to\n        }\n      };\n    case SET_FILTER_AVERAGE_INCOME_TO:\n      return {\n        ...state,\n        averageIncome: {\n          to: action.payload,\n          from: state.averageIncome.from\n        }\n      };\n    case SET_FILTER_LAST_MONTH_INCOME_TO:\n      return {\n        ...state,\n        lastMonthIncome: {\n          to: action.payload,\n          from: state.lastMonthIncome.from\n        }\n      };\n    case SET_FILTER_TOTAL_INCOME_TO:\n      return {\n        ...state,\n        totalIncome: {\n          to: action.payload,\n          from: state.totalIncome.from\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  REQUEST_COMPANIES_FAILED,\n  REQUEST_COMPANIES_PENDING,\n  REQUEST_COMPANIES_SUCCESS,\n  REQUEST_INCOMES_FAILED,\n  REQUEST_INCOMES_PENDING,\n  REQUEST_INCOMES_SUCCESS\n} from \"../utils/constants\";\n\nconst initState = {\n  companies: [],\n  incomes: [],\n  isPending: \"\",\n  error: \"\"\n};\n\nexport const requestReducer = ( state = initState, action ) => {\n  switch ( action.type ) {\n    case REQUEST_COMPANIES_PENDING:\n      return {\n        ...state,\n        isPending: REQUEST_COMPANIES_PENDING\n      };\n    case REQUEST_COMPANIES_FAILED:\n      return {\n        ...state,\n        error: action.payload,\n        isPending: \"\"\n      };\n    case REQUEST_COMPANIES_SUCCESS:\n      return {\n        ...state,\n        companies: action.payload,\n        isPending: \"\"\n      };\n    case REQUEST_INCOMES_PENDING:\n      return {\n        ...state,\n        isPending: action.payload ? REQUEST_INCOMES_PENDING: \"\"\n      };\n    case REQUEST_INCOMES_SUCCESS:\n      let incomes = [ ...state.incomes ];\n      incomes.push({ ...action.payload });\n      return {\n        ...state,\n        incomes: incomes\n      };\n    case REQUEST_INCOMES_FAILED:\n      return {\n        ...state,\n        error: action.payload,\n        isPending: \"\"\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore\n} from \"redux\";\nimport { requestReducer, filterReducer } from \"./store/reducers\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport './index.scss';\n\nconst store = createStore(\n  combineReducers({ requestReducer, filterReducer }),\n  compose(\n    applyMiddleware( thunk ),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }><App/></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}